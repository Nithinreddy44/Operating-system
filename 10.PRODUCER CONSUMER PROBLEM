//PRODUCER CONSUMER PRODUCES
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <semaphore.h>

#define BUFFER_SIZE 10

int buffer[BUFFER_SIZE];
int in = 0, out = 0;
sem_t empty, full, mutex;

void *producer(void *args) {
    int item;
    for (int i = 0; i < 20; i++) {
        item = rand() % 100 + 1; // generate random item
        sem_wait(&empty); // decrement empty semaphore
        sem_wait(&mutex); // enter critical section
        buffer[in] = item; // add item to buffer
        printf("Producer produced item: %d\n", item);
        in = (in + 1) % BUFFER_SIZE; // increment buffer pointer
        sem_post(&mutex); // exit critical section
        sem_post(&full); // increment full semaphore
    }
    pthread_exit(NULL);
}

void *consumer(void *args) {
    int item;
    for (int i = 0; i < 20; i++) {
        sem_wait(&full); // decrement full semaphore
        sem_wait(&mutex); // enter critical section
        item = buffer[out]; // remove item from buffer
        printf("Consumer consumed item: %d\n", item);
        out = (out + 1) % BUFFER_SIZE; // increment buffer pointer
        sem_post(&mutex); // exit critical section
        sem_post(&empty); // increment empty semaphore
    }
    pthread_exit(NULL);
}

int main() {
    srand(time(NULL)); // seed random number generator

    sem_init(&empty, 0, BUFFER_SIZE); // initialize empty semaphore to BUFFER_SIZE
    sem_init(&full, 0, 0); // initialize full semaphore to 0
    sem_init(&mutex, 0, 1); // initialize mutex semaphore to 1

    pthread_t producer_thread, consumer_thread;

    pthread_create(&producer_thread, NULL, producer, NULL);
    pthread_create(&consumer_thread, NULL, consumer, NULL);

    pthread_join(producer_thread, NULL);
    pthread_join(consumer_thread, NULL);

    sem_destroy(&empty); // destroy empty semaphore
    sem_destroy(&full); // destroy full semaphore
    sem_destroy(&mutex); // destroy mutex semaphore

    return 0;
}
OUTPUT:
Producer produced item 45 at position 0
Consumer consumed item 45 from position 0
Producer produced item 20 at position 0
Consumer consumed item 20 from position 1
Producer produced item 22 at position 1
Consumer
